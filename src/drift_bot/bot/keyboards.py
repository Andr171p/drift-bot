from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from .enums import Confirmation, AdminEventAction
from .callbacks import (
    ConfirmEventCreationCallback,
    ConfirmJudgeRegistrationCallback,
    AdminEventCallback,
    JudgeRegistrationCallback,
    CriterionChoiceCallback,
)

from ..core.enums import Criterion


CRITERION_TEXTS: dict[Criterion, str] = {
    Criterion.ANGLE: "–£–≥–æ–ª",
    Criterion.LINE: "–¢—Ä–∞–µ–∫—Ç–æ—Ä–∏—è",
    Criterion.STYLE: "–°—Ç–∏–ª—å"
}


def confirm_event_creation_kb() -> InlineKeyboardMarkup:
    """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.
         - `–î–∞` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
         - `–Ω–µ—Ç` –¥–ª—è –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è
    """
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–î–∞ ‚úÖ",
        callback_data=ConfirmEventCreationCallback(confirmation=Confirmation.YES).pack()
    )
    builder.button(
        text="–ù–µ—Ç ‚ùå",
        callback_data=ConfirmEventCreationCallback(confirmation=Confirmation.NO).pack()
    )
    return builder.as_markup()


def admin_event_actions_kb(event_id: int, active: bool) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã, –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Å–æ–±—ã—Ç–∏–µ–º."""
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å ‚úèÔ∏è",
        callback_data=AdminEventCallback(event_id=event_id, action=AdminEventAction.EDIT).pack()
    )
    builder.button(
        text="–£–¥–∞–ª–∏—Ç—å üóëÔ∏è",
        callback_data=AdminEventCallback(event_id=event_id, action=AdminEventAction.DELETE).pack()
    )
    builder.button(
        text="–û—Ç–∫—Ä—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é üöÄ" if active else "–ó–∞–∫—Ä—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é üîí",
        callback_data=AdminEventCallback(
            event_id=event_id,
            action=AdminEventAction.TOGGLE_REGISTRATION
        ).pack()
    )
    builder.button(
        text="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Å—É–¥—å—é üîó",
        callback_data=AdminEventCallback(
            event_id=event_id,
            action=AdminEventAction.INVITE_REFEREE
        ).pack()
    )
    builder.button(
        text="–°—É–¥—å–∏ ‚öñÔ∏è",
        callback_data=AdminEventCallback(
            event_id=event_id,
            action=AdminEventAction.REFEREES_LIST
        ).pack()
    )
    builder.button(
        text="–ü–∏–ª–æ—Ç—ã üèéÔ∏è",
        callback_data=AdminEventCallback(
            event_id=event_id,
            action=AdminEventAction.PILOTS_LIST
        ).pack()
    )
    return builder.as_markup()


def register_judge_kb(event_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—É–¥—å–∏ –Ω–∞ —ç—Ç–∞–ø."""
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è üî£",
        callback_data=JudgeRegistrationCallback(event_id=event_id).pack()
    )
    return builder.as_markup()


def choose_criterion_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É–¥–µ–π—Å–∫–æ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—è."""
    builder = InlineKeyboardBuilder()
    for criterion in CRITERION_TEXTS.keys():
        builder.button(
            text=CRITERION_TEXTS[criterion],
            callback_data=CriterionChoiceCallback(criterion=criterion)
        )
    return builder.as_markup()


def confirm_judge_registration_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—É–¥—å–∏."""
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–î–∞ ‚úÖ",
        callback_data=ConfirmJudgeRegistrationCallback(confirmation=Confirmation.YES).pack()
    )
    builder.button(
        text="–ù–µ—Ç ‚ùå",
        callback_data=ConfirmJudgeRegistrationCallback(confirmation=Confirmation.NO).pack()
    )
    return builder.as_markup()
